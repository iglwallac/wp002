{"version":3,"sources":["server.js"],"names":["data","readFilePromisified","__dirname","parsed","JSON","parse","_isEmpty","console","log","delay","start","loadables","runServer","version","name","assets","newrelic","require","extensions","EventEmitter","setNewRelicLibrary","run","readFile","promisify","defaultMaxListeners"],"mappings":";;;;;sCAsBA,aAAwB;AACtB,UAAMA,OAAO,6BAAMC,oBAAqB,GAAEC,SAAU,sBAAjC,CAAN,CAAb;AACA,UAAMC,SAASC,KAAKC,KAAL,CAAWL,IAAX,CAAf;AACA,QAAIM,SAASH,MAAT,CAAJ,EAAsB;AACpB;AACAI,cAAQC,GAAR,CAAY,oDAAZ;AACA,mCAAMC,MAAM,IAAN,CAAN;AACAC;AACA;AACD;AACD,UAAMC,YAAY,mGAAlB;AACAC,cAAU,EAAEC,OAAF,EAAWC,IAAX,EAAiBC,MAAjB,EAAyBJ,SAAzB,EAAV;AACD,G;;kBAZcD,K;;;;;AAtBf;;;AAGA,MAAMM,WAAWC,QAAQ,UAAR,CAAjB;;AAEA;AACAA,QAAQC,UAAR,CAAmB,MAAnB,IAA6BD,QAAQC,UAAR,CAAmB,KAAnB,CAA7B;;AAEA,MAAM,EAAEC,YAAF,KAAmBF,QAAQ,QAAR,CAAzB;AACA,MAAM,EAAEG,kBAAF,KAAyBH,sCAA/B;AACA,MAAM,EAAEJ,OAAF,EAAWC,IAAX,KAAoBG,yBAA1B;AACA,MAAMF,SAASE,gCAAf;AACA,MAAM,EAAEI,KAAKT,SAAP,KAAqBK,uBAA3B;AACA,MAAM,EAAEK,QAAF,KAAeL,QAAQ,IAAR,CAArB;AACA,MAAM,EAAEM,SAAF,EAAad,KAAb,KAAuBQ,QAAQ,UAAR,CAA7B;AACA,MAAMX,WAAWW,QAAQ,gBAAR,CAAjB;;AAEAE,aAAaK,mBAAb,GAAmC,IAAnC;AACAJ,mBAAmBJ,QAAnB;;AAEA,MAAMf,sBAAsBsB,UAAUD,QAAV,CAA5B;;AAgBAZ","file":"server.js","sourcesContent":["/**\n * Server module main entry point.\n */\nconst newrelic = require('newrelic')\n\n// Use the deprecated require.extensions api to fix import of .jsx files that don't end .jsx\nrequire.extensions['.jsx'] = require.extensions['.js']\n\nconst { EventEmitter } = require('events')\nconst { setNewRelicLibrary } = require('./lib/new-relic-transaction')\nconst { version, name } = require('./package.json')\nconst assets = require('./webpack-assets.json')\nconst { run: runServer } = require('./lib/server')\nconst { readFile } = require('fs')\nconst { promisify, delay } = require('bluebird')\nconst _isEmpty = require('lodash/isEmpty')\n\nEventEmitter.defaultMaxListeners = 1000\nsetNewRelicLibrary(newrelic)\n\nconst readFilePromisified = promisify(readFile)\n\nasync function start () {\n  const data = await readFilePromisified(`${__dirname}/react-loadable.json`)\n  const parsed = JSON.parse(data)\n  if (_isEmpty(parsed)) {\n    /* eslint-disable-next-line no-console */\n    console.log('waiting for webpack to create react-loadables.json')\n    await delay(1000)\n    start()\n    return\n  }\n  const loadables = await import('./react-loadable.json')\n  runServer({ version, name, assets, loadables })\n}\n\nstart()\n\n"]}